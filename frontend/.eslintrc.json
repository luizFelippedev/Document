{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "env": {
    "browser": true,
    "node": true,
    "es2022": true,
    "jest": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks", // Keep 'react-hooks' in plugins, it's needed for the rules to work
    "prettier"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    // REMOVE THIS LINE: "plugin:react-hooks/recommended", // <--- REMOVE THIS LINE
    "next/core-web-vitals", // This already includes plugin:react-hooks/recommended
    "prettier"
  ],
  "rules": {
    "no-console": "warn",
    "no-unused-vars": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "prettier/prettier": "error",
    "spaced-comment": ["error", "always", {
      "line": {
        "markers": ["/"],
        "exceptions": ["-", "+", "*", "@"]
      },
      "block": {
        "markers": ["!"],
        "exceptions": ["*", "@"]
      }
    }]
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        // ...
      }
    },
    {
      "files": ["pages/**/*.{js,jsx,ts,tsx}", "app/**/*.{js,jsx,ts,tsx}"],
      "rules": {
        // ...
      }
    },
    {
      "files": ["jest.config.js", "src/**/*.test.{js,jsx,ts,tsx}", "__tests__/**/*.{js,jsx,ts,tsx}"],
      "env": {
        "jest": true
      },
      "rules": {
        "no-unused-expressions": "off"
      }
    },
    {
      "files": ["playwright.config.ts", "e2e/**/*.test.{js,ts}"],
      "env": {
        "jest": true
      },
      "rules": {
        "no-unused-expressions": "off"
      }
    }
  ]
}