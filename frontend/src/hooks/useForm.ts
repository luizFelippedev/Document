import { useState } from "react"; export const useForm = (initialValues, validateFn) => { const [values, setValues] = useState(initialValues); const [errors, setErrors] = useState({}); const [touched, setTouched] = useState({}); const handleChange = (e) => { const { name, value } = e.target; setValues({ ...values, [name]: value }); }; const handleBlur = (e) => { const { name } = e.target; setTouched({ ...touched, [name]: true }); const validationErrors = validateFn(values); setErrors(validationErrors); }; const handleSubmit = (onSubmit) => (e) => { e.preventDefault(); const validationErrors = validateFn(values); setErrors(validationErrors); setTouched(Object.keys(values).reduce((acc, key) => ({ ...acc, [key]: true }), {})); if (Object.keys(validationErrors).length === 0) { onSubmit(values); } }; return { values, errors, touched, handleChange, handleBlur, handleSubmit }; }
